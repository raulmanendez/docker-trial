version: '3'
services:
  backend:
    image: docker-back-end
    container_name: docker_be
    restart: no    
    environment:
      - "spring.profiles.active=${SPRING_PROFILE_ACTIVE}"
    volumes:
      - backend_volume:/data
    networks:
      - springboot-mysql-net
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8000:8000
  db:
    image: mysql
    container_name: database
    restart: no
    environment:
      MYSQL_ROOT_PASSWORD: root
    healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
        interval: 3s
        retries: 5
        start_period: 30s
    volumes:
      - mysql_volume:/var/lib/mysql
    networks:
      - springboot-mysql-net
    expose:
        - 3306
        - 33060
  frontend:
      image: docker-front-end
      container_name: docker_fe
      restart: no
      networks:
        - springboot-mysql-net
      depends_on:
        - backend
      ports:
        - 8001:80
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.my-router.rule=Host(`docker.myapp.com`)"
  wordpress:
    depends_on:
      - db
    image: wordpress:latest
    restart: always
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: root
      WORDPRESS_DB_NAME: wordpress
    volumes:
      - wordpress_volume:/var/www/html
    networks:
      - springboot-mysql-network
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.blogs.tls.certresolver=myresolver"
        - "traefik.http.routers.blogs.rule=Host(`blogs.myapp.com`)"
  traefik:
    image: traefik:v2.5
    container_name: traefik
    networks:
        - springboot-mysql-net
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--api.insecure=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/traefik.yml
    labels:
      - "traefik.http.routers.traefik.rule=Host(`traefik.app.dev`)"
      - "traefik.http.routers.traefik.entrypoints=web"
networks:
  springboot-mysql-net: {}
volumes:
  backend_volume:
  mysql_volume:
